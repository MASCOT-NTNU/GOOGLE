Search.setIndex({"docnames": ["Agents", "Config", "CostValley", "Experiment", "Field", "GRF", "OPA", "Planner", "Planner.Myopic2D", "Planner.RRTSCV", "Simulators", "Visualiser", "WGS", "WaypointGraph", "func_test", "index", "modules", "run_replicates", "sensitivity", "tests", "usr_func"], "filenames": ["Agents.rst", "Config.rst", "CostValley.rst", "Experiment.rst", "Field.rst", "GRF.rst", "OPA.rst", "Planner.rst", "Planner.Myopic2D.rst", "Planner.RRTSCV.rst", "Simulators.rst", "Visualiser.rst", "WGS.rst", "WaypointGraph.rst", "func_test.rst", "index.rst", "modules.rst", "run_replicates.rst", "sensitivity.rst", "tests.rst", "usr_func.rst"], "titles": ["Agents package", "Config module", "CostValley package", "Experiment package", "Field module", "GRF package", "OPA module", "Planner package", "Planner.Myopic2D package", "Planner.RRTSCV package", "Simulators package", "Visualiser package", "WGS module", "WaypointGraph module", "func_test module", "Welcome to GOOGLE\u2019s documentation!", "src", "run_replicates module", "sensitivity package", "tests package", "usr_func package"], "terms": {"comput": 2, "penalti": 2, "base": [1, 2, 3, 4, 7, 9, 10, 12, 13, 14, 19], "current": [2, 4, 9, 13], "locat": [1, 2, 4, 7, 9, 13, 19], "previou": 2, "It": [2, 7, 12], "calcul": [2, 20], "dot": 2, "product": 2, "between": [2, 4, 7, 13, 20], "vector": [2, 13, 16], "from": [2, 3, 13], "rest": 2, "possibl": 2, "field": [2, 3, 13, 15, 16, 19], "thi": [2, 19, 20], "give": 2, "which": 2, "i": [2, 4, 9, 12, 19, 20], "behind": 2, "agent": [2, 15, 16], "": 2, "inerti": 2, "path": [2, 7, 19], "class": [1, 2, 3, 4, 7, 9, 10, 12, 13, 19], "grid": [2, 4, 13, 20], "object": [1, 2, 3, 4, 7, 9, 10, 12, 13, 19], "filter": 2, "high": 2, "ar": [2, 19], "desir": [2, 7], "get_current_loc": [2, 16], "numpi": [1, 2, 3, 4, 7, 9, 13, 20], "ndarrai": [1, 2, 3, 4, 7, 9, 13, 20], "get_direction_field": [2, 16], "x_now": 2, "y_now": 2, "updat": [2, 12], "given": [2, 4, 12, 13, 19, 20], "get_previous_loc": [2, 16], "set_current_loc": [2, 16], "loc": [1, 2, 4, 7, 9], "none": [1, 2, 4, 7, 9, 10, 12, 13, 14, 19, 20], "set_previous_loc": [2, 16], "myopic2d": [7, 16], "rrtscv": [7, 16], "rrtstarcv": [7, 16], "treenod": [7, 16, 19], "get_cost": [7, 9], "get_distance_between_nod": [7, 9, 16], "get_loc": [7, 9], "get_par": [7, 9], "set_cost": [7, 9], "set_loc": [7, 9], "set_par": [7, 9], "plan": 7, "one": [7, 13, 14], "step": [1, 7], "ahead": 7, "accord": [4, 7, 20], "angl": 7, "get_waypoint_from_straight_lin": [7, 16], "loc_now": 7, "loc_target": 7, "basi": 9, "tree": 9, "expans": 9, "dure": [9, 10], "rrt": [9, 10], "explor": 9, "cost": [7, 9], "0": [7, 9, 12, 13, 20], "parent": [7, 9], "float": [4, 9, 12, 13, 14, 20], "get": [9, 13, 20], "associ": 9, "node": [7, 9, 16], "static": [1, 7, 9, 12, 13], "n1": [7, 9], "n2": [7, 9], "return": [1, 3, 4, 9, 12, 13, 19, 20], "valu": [1, 4, 9, 13, 14, 20], "set": [1, 4, 7, 9, 13, 19, 20], "new": 9, "84": 12, "coordin": [1, 12, 13], "system": [12, 13], "north": [12, 13], "east": [12, 13], "down": [12, 13], "refer": 12, "emploi": 12, "convert": [1, 12], "lat": [1, 12], "lon": [1, 12], "degre": 12, "x": [1, 12, 20], "y": [1, 12, 20], "meter": 12, "specif": 12, "origin": 12, "The": [12, 13], "select": [7, 12], "nidarosdomen": 12, "trondheim": 12, "exampl": [1, 12], "latlon2xi": [12, 16], "63": 12, "42690974": 12, "10": 12, "3969373": 12, "print": 12, "1000": 12, "2000": 12, "xy2latlon": [12, 16], "43589289658141": 12, "437112521492383": 12, "get_circumfer": [12, 16], "circumfer": 12, "earth": 12, "get_origin": [12, 16], "tupl": [12, 20], "set_origin": [12, 16], "src": 15, "packag": [15, 16], "config": [15, 16], "modul": [15, 16], "costvallei": [15, 16], "experi": [15, 16], "grf": [4, 15, 16], "opa": [1, 15, 16], "planner": [15, 16, 19], "simul": [1, 15, 16], "visualis": [14, 15, 16], "wg": [1, 15, 16], "waypointgraph": [15, 16], "func_test": [15, 16], "run_repl": [15, 16], "sensit": [15, 16], "test": [4, 7, 14, 15, 16, 20], "usr_func": [15, 16], "index": [4, 13, 15], "search": 15, "page": 15, "submodul": 16, "agentmyop": 16, "agentmyopicvi": 16, "agentrrtstar": 16, "agentrrtstarvi": 16, "content": 16, "budget": 16, "direct": [16, 20], "auv": 16, "eda": 16, "subpackag": 16, "astar": 16, "prm": 16, "straightlinepathplann": 16, "ctd": 16, "log": 16, "logmyop": 16, "rrtlog": 16, "rrtsimul": 16, "simulator_eibv": 16, "simulator_myopic2d": 16, "simulator_rrtstar": 16, "agentplotmyop": 16, "agentplotrrtstar": 16, "agentplotrrtstarvi": 16, "treeplott": 16, "valleyplott": 16, "test_cost_effect": 16, "test_rrtstar_converg": 16, "test_agent_myop": 16, "test_agent_rrtstar": 16, "test_agent_rrtstarvi": 16, "test_auv": 16, "test_budget": 16, "test_config": 16, "test_cost_vallei": 16, "test_ctd_simul": 16, "test_eibv_method": 16, "test_experiment_eda": 16, "test_field": 16, "test_grf": 16, "test_log": 16, "test_myopic2d": 16, "test_plann": 16, "test_rrtstar": 16, "test_run_repl": 16, "test_simulator_eibv": 16, "test_simulator_myopic2d": 16, "test_simulator_rrtstar": 16, "test_treenod": 16, "testplann": [16, 19], "setup": [1, 7, 16, 19], "test_cost": [16, 19], "test_par": [16, 19], "test_set_loc": [16, 19], "eibv": 16, "checkfold": 16, "get_resume_st": 16, "interpolate_2d": 16, "interpolate_3d": 16, "is_even": 16, "is_list_empti": 16, "normal": 16, "refill_nan_valu": 16, "set_resume_st": 16, "sort_polygon_vertic": 16, "unit": 19, "methodnam": [7, 19], "runtest": [7, 19], "testcas": [7, 19], "common": 19, "waypoint": [4, 13, 19], "graph": [13, 19], "hook": [7, 19], "method": [7, 19], "up": [7, 19], "fixtur": [7, 19], "befor": [7, 19], "exercis": [7, 19], "check": [4, 20], "folder": 20, "exist": 20, "function": 20, "global": 20, "resum": 20, "state": 20, "bool": [4, 20], "integ": [1, 20], "even": [13, 20], "int": [1, 4, 13, 20], "paramet": [1, 4, 13, 19, 20], "true": [14, 20], "fals": 20, "els": 20, "list": [4, 13, 20], "empti": [19, 20], "glist": 20, "can": [13, 14, 20], "nest": 20, "etc": 20, "normalis": 20, "min": 20, "max": 20, "amin": 20, "amax": 20, "1": [13, 20], "sort": 20, "polygon": [1, 4, 13, 19, 20], "counter": 20, "clockwis": 20, "arg": 20, "vertic": [13, 20], "organis": 20, "order": 20, "np": [1, 4, 13, 20], "arrai": [4, 13, 20], "x1": [13, 20], "y1": [13, 20], "z1": [13, 20], "x2": [13, 20], "y2": [13, 20], "z2": [13, 20], "xn": [13, 20], "yn": [13, 20], "zn": [13, 20], "input": 20, "column": 20, "first": 20, "param": [13, 20], "n": [13, 20], "m": 20, "dimens": [13, 20], "type": [13, 20], "replic": [1, 3], "trajectori": 3, "data": [3, 10, 20], "collect": 3, "contain": [1, 3, 4, 13, 20], "essenti": [1, 3], "inform": 3, "handl": [3, 4], "get_dataset": [3, 16], "dataset": 3, "interest": 3, "testauv": [16, 19], "test_load_auv_data": [16, 19], "eibv_approxim": [16, 20], "eibv_mvn": [16, 20], "calc_eibv": [16, 20], "two": 20, "differ": 20, "implement": 20, "threshold": 20, "mu": 20, "sig": 20, "h": 20, "r": 20, "number": [1, 14, 20], "character": 20, "fresh": 20, "water": 20, "salin": 20, "mean": 20, "covari": 20, "matrix": 20, "sampl": 20, "nugget": 20, "measur": 20, "nois": 20, "interpol": [19, 20], "2d": 20, "discret": [4, 13, 20], "nx": 20, "ny": 20, "interpolation_method": 20, "linear": 20, "us": [1, 4, 7, 13, 20], "griddata": 20, "finer": 20, "result": [13, 20], "3d": 20, "z": 20, "layer": [13, 20], "combin": 20, "them": 20, "togeth": 20, "refil": 20, "nan": 20, "neighbour": [4, 13, 20], "ha": [1, 14], "most": 1, "import": 1, "long": 1, "horizon": 1, "studi": [1, 10], "polygon_operational_area": 1, "defin": [1, 13], "safe": 1, "oper": 1, "area": 1, "polygon_operational_area_shap": 1, "shape": 1, "detect": 1, "collis": [1, 4], "border": [1, 4, 7, 13, 19], "polygon_obstalc": 1, "identifi": 1, "polygon_obstalce_shap": 1, "obstacl": [1, 4, 7, 13, 19], "start": [1, 7], "get_line_border_shap": [1, 16], "geometri": 1, "linestr": 1, "get_line_obstacle_shap": [1, 16], "get_loc_end": [1, 16], "get_loc_start": [1, 16], "get_num_cor": [1, 16], "core": 1, "get_num_repl": [1, 16], "get_num_step": [1, 16], "get_polygon_bord": [1, 13, 16], "get_polygon_border_shap": [1, 16], "shapel": 1, "xy": 1, "get_polygon_obstacl": [1, 13, 16], "get_polygon_obstacle_shap": [1, 16], "get_wgs_loc_end": [1, 16], "get_wgs_loc_start": [1, 16], "get_wgs_polygon_bord": [1, 16], "oprat": 1, "get_wgs_polygon_obstacl": [1, 16], "set_loc_end": [1, 16], "set_loc_start": [1, 16], "set_num_cor": [1, 16], "set_num_repl": [1, 16], "set_num_step": [1, 16], "an": 1, "set_polygon_bord": [1, 13, 16], "rubric": 1, "lat1": 1, "lon1": 1, "lat2": 1, "lon2": 1, "latn": 1, "lonn": 1, "set_polygon_obstacl": [1, 13, 16], "wgs2xy": [1, 16], "valid": 4, "gener": [4, 10, 19], "legal": 4, "condit": 4, "neighbour_dist": 4, "120": 4, "everyth": 4, "regard": 4, "element": 4, "border_contain": [4, 16], "point": [4, 14], "within": [4, 19], "get_border_limit": [4, 16], "get_grid": [4, 16], "get_ind_from_loc": [4, 16], "xp": [4, 13], "yp": [4, 13], "closest": [4, 13], "get_location_from_ind": [4, 16], "ind": [4, 13], "get_neighbour_dist": [4, 13, 16], "distanc": [4, 13], "get_neighbour_indic": [4, 16], "ind_now": 4, "indic": [4, 13, 19], "is_border_in_the_wai": [4, 16], "loc_start": [4, 7], "loc_end": [4, 7], "wai": 4, "is_obstacle_in_the_wai": [4, 16], "obstacle_contain": [4, 16], "set_neighbour_dist": [4, 13, 16], "append_log": [10, 16], "rectangular": 13, "form": 13, "xrang": 13, "yrang": 13, "distance_neighbour": 13, "boundari": 13, "under": 13, "ned": 13, "e": 13, "d": 13, "polygon_bord": 13, "polygon_obstacl": [7, 13, 16], "multipl": 13, "obstalc": 13, "x11": 13, "y11": 13, "x21": 13, "y21": 13, "xn1": 13, "yn1": 13, "depth": 13, "d0": 13, "d1": 13, "d2": 13, "dn": 13, "like": 13, "__": 13, "_________": 13, "x0": 13, "y0": 13, "z0": 13, "hash": 13, "tabl": 13, "2": 13, "3": 13, "construct_hash_neighbour": [13, 16], "construct": 13, "around": 13, "each": 13, "adjac": 13, "find": 13, "upper": 13, "lower": 13, "correspond": 13, "later": 13, "append": 13, "all": 13, "construct_waypoint": [13, 16], "instruct": 13, "abov": 13, "regular": 13, "meshgrid": 13, "Then": 13, "move": 13, "row": 13, "right": 13, "side": 13, "remov": 13, "illeg": 13, "add": 13, "get_hash_neighbour": [13, 16], "get_ind_from_waypoint": [13, 16], "zp": 13, "get_ind_neighbour": [13, 16], "close": 13, "get_vector_between_two_waypoint": [13, 16], "wp1": 13, "wp2": 13, "vec": 13, "get_waypoint_from_ind": [13, 16], "get_waypoint": [13, 16], "set_depth_lay": [13, 16], "onli": 13, "nx2": 13, "allow": 13, "have": 13, "plg_border": 7, "plg_obstacl": 7, "distance_toler": [7, 16], "02": 7, "distance_tolerance_target": [7, 16], "075": 7, "get_min_cost_nod": [7, 16], "is_arriv": [7, 16], "is_node_in_list": [7, 16], "l": 7, "is_within_bord": [7, 16], "is_within_obstacl": [7, 16], "search_path": [7, 16], "testastar": [7, 16], "test_astar": [7, 16], "conduct": 7, "probabilist": 7, "road": 7, "map": 7, "philosophi": 7, "minimum": 7, "end": 7, "get_ind_min_cost": [7, 16], "get_new_loc": [7, 16], "get_road_map": [7, 16], "get_shortest_path_using_dijkstra": [7, 16], "inredzon": [7, 16], "iscollid": [7, 16], "plot_prm": [7, 16], "plotf_vector": [14, 16], "xplot": 14, "yplot": 14, "titl": 14, "alpha": 14, "cmap": 14, "matplotlib": 14, "pyplot": 14, "get_cmap": 14, "cbar_titl": 14, "colorbar": 14, "vmin": 14, "vmax": 14, "tick": 14, "xlabel": 14, "ylabel": 14, "note": 14, "triangul": 14, "mayb": 14, "sometim": 14, "cannot": 14, "axi": 14, "chang": 14, "anoth": 14, "might": 14, "work": [14, 19], "so": 14, "final": 14, "output": 14, "need": 14, "carefulli": 14, "treat": 14, "correct": 14, "also": 14, "caus": 14, "issu": 14, "well": 14, "testconfig": [16, 19], "test_starting_home_loc": [16, 19], "test_wgs_starting_home_loc": [16, 19], "testfield": [16, 19], "test_border_contain": [16, 19], "test_border_in_the_wai": [16, 19], "test_empty_grid": [16, 19], "test_get_ind_from_loc": [16, 19], "test_get_locations_from_ind": [16, 19], "test_get_neighbour": [16, 19], "test_illegal_grid": [16, 19], "unittest": 19, "configur": 19, "collid": 19, "random": 19, "should": 19, "nearest": 19, "ani": 19}, "objects": {"": [[0, 0, 0, "-", "Agents"], [1, 0, 0, "-", "Config"], [2, 0, 0, "-", "CostValley"], [3, 0, 0, "-", "Experiment"], [4, 0, 0, "-", "Field"], [5, 0, 0, "-", "GRF"], [7, 0, 0, "-", "Planner"], [10, 0, 0, "-", "Simulators"], [11, 0, 0, "-", "Visualiser"], [12, 0, 0, "-", "WGS"], [13, 0, 0, "-", "WaypointGraph"], [14, 0, 0, "-", "func_test"], [18, 0, 0, "-", "sensitivity"], [19, 0, 0, "-", "tests"], [20, 0, 0, "-", "usr_func"]], "Config": [[1, 1, 1, "", "Config"]], "Config.Config": [[1, 2, 1, "", "get_line_border_shapely"], [1, 2, 1, "", "get_line_obstacle_shapely"], [1, 2, 1, "", "get_loc_end"], [1, 2, 1, "", "get_loc_start"], [1, 2, 1, "", "get_num_cores"], [1, 2, 1, "", "get_num_replicates"], [1, 2, 1, "", "get_num_steps"], [1, 2, 1, "", "get_polygon_border"], [1, 2, 1, "", "get_polygon_border_shapely"], [1, 2, 1, "", "get_polygon_obstacle"], [1, 2, 1, "", "get_polygon_obstacle_shapely"], [1, 2, 1, "", "get_wgs_loc_end"], [1, 2, 1, "", "get_wgs_loc_start"], [1, 2, 1, "", "get_wgs_polygon_border"], [1, 2, 1, "", "get_wgs_polygon_obstacle"], [1, 2, 1, "", "set_loc_end"], [1, 2, 1, "", "set_loc_start"], [1, 2, 1, "", "set_num_cores"], [1, 2, 1, "", "set_num_replicates"], [1, 2, 1, "", "set_num_steps"], [1, 2, 1, "", "set_polygon_border"], [1, 2, 1, "", "set_polygon_obstacle"], [1, 2, 1, "", "wgs2xy"]], "CostValley": [[2, 0, 0, "-", "Direction"]], "CostValley.Direction": [[2, 1, 1, "", "Direction"]], "CostValley.Direction.Direction": [[2, 2, 1, "", "get_current_location"], [2, 2, 1, "", "get_direction_field"], [2, 2, 1, "", "get_previous_location"], [2, 2, 1, "", "set_current_location"], [2, 2, 1, "", "set_previous_location"]], "Experiment": [[3, 0, 0, "-", "AUV"]], "Experiment.AUV": [[3, 1, 1, "", "AUV"]], "Experiment.AUV.AUV": [[3, 2, 1, "", "get_dataset"]], "Field": [[4, 1, 1, "", "Field"]], "Field.Field": [[4, 2, 1, "", "border_contains"], [4, 2, 1, "", "get_border_limits"], [4, 2, 1, "", "get_grid"], [4, 2, 1, "", "get_ind_from_location"], [4, 2, 1, "", "get_location_from_ind"], [4, 2, 1, "", "get_neighbour_distance"], [4, 2, 1, "", "get_neighbour_indices"], [4, 2, 1, "", "is_border_in_the_way"], [4, 2, 1, "", "is_obstacle_in_the_way"], [4, 2, 1, "", "obstacle_contains"], [4, 2, 1, "", "set_neighbour_distance"]], "Planner": [[7, 0, 0, "-", "AStar"], [8, 0, 0, "-", "Myopic2D"], [7, 0, 0, "-", "PRM"], [9, 0, 0, "-", "RRTSCV"], [7, 0, 0, "-", "StraightLinePathPlanner"]], "Planner.AStar": [[7, 1, 1, "", "AStar"], [7, 1, 1, "", "Node"], [7, 1, 1, "", "TestAstar"]], "Planner.AStar.AStar": [[7, 3, 1, "", "DISTANCE_TOLERANCE"], [7, 3, 1, "", "DISTANCE_TOLERANCE_TARGET"], [7, 2, 1, "", "get_distance_between_nodes"], [7, 2, 1, "", "get_min_cost_node"], [7, 2, 1, "", "is_arrived"], [7, 2, 1, "", "is_node_in_list"], [7, 2, 1, "", "is_within_border"], [7, 2, 1, "", "is_within_obstacle"], [7, 2, 1, "", "search_path"]], "Planner.AStar.TestAstar": [[7, 2, 1, "", "setUp"], [7, 2, 1, "", "test_astar"]], "Planner.PRM": [[7, 1, 1, "", "Node"], [7, 1, 1, "", "PRM"]], "Planner.PRM.PRM": [[7, 2, 1, "", "get_distance_between_nodes"], [7, 2, 1, "", "get_ind_min_cost"], [7, 2, 1, "", "get_new_location"], [7, 2, 1, "", "get_road_map"], [7, 2, 1, "", "get_shortest_path_using_dijkstra"], [7, 2, 1, "", "inRedZone"], [7, 2, 1, "", "iscollided"], [7, 3, 1, "", "nodes"], [7, 2, 1, "", "plot_prm"], [7, 3, 1, "", "polygon_obstacles"]], "Planner.RRTSCV": [[9, 0, 0, "-", "TreeNode"]], "Planner.RRTSCV.TreeNode": [[9, 1, 1, "", "TreeNode"]], "Planner.RRTSCV.TreeNode.TreeNode": [[9, 2, 1, "", "get_cost"], [9, 2, 1, "", "get_distance_between_nodes"], [9, 2, 1, "", "get_location"], [9, 2, 1, "", "get_parent"], [9, 2, 1, "", "set_cost"], [9, 2, 1, "", "set_location"], [9, 2, 1, "", "set_parent"]], "Planner.StraightLinePathPlanner": [[7, 1, 1, "", "StraightLinePathPlanner"]], "Planner.StraightLinePathPlanner.StraightLinePathPlanner": [[7, 2, 1, "", "get_waypoint_from_straight_line"]], "Simulators": [[10, 0, 0, "-", "RRTLog"]], "Simulators.RRTLog": [[10, 1, 1, "", "Log"]], "Simulators.RRTLog.Log": [[10, 2, 1, "", "append_log"]], "WGS": [[12, 1, 1, "", "WGS"]], "WGS.WGS": [[12, 2, 1, "", "get_circumference"], [12, 2, 1, "", "get_origin"], [12, 2, 1, "", "latlon2xy"], [12, 2, 1, "", "set_origin"], [12, 2, 1, "", "xy2latlon"]], "WaypointGraph": [[13, 1, 1, "", "WaypointGraph"]], "WaypointGraph.WaypointGraph": [[13, 2, 1, "", "construct_hash_neighbours"], [13, 2, 1, "", "construct_waypoints"], [13, 2, 1, "", "get_hash_neighbour"], [13, 2, 1, "", "get_ind_from_waypoint"], [13, 2, 1, "", "get_ind_neighbours"], [13, 2, 1, "", "get_neighbour_distance"], [13, 2, 1, "", "get_polygon_border"], [13, 2, 1, "", "get_polygon_obstacles"], [13, 2, 1, "", "get_vector_between_two_waypoints"], [13, 2, 1, "", "get_waypoint_from_ind"], [13, 2, 1, "", "get_waypoints"], [13, 2, 1, "", "set_depth_layers"], [13, 2, 1, "", "set_neighbour_distance"], [13, 2, 1, "", "set_polygon_border"], [13, 2, 1, "", "set_polygon_obstacles"]], "func_test": [[14, 4, 1, "", "plotf_vector"]], "tests": [[19, 0, 0, "-", "test_auv"], [19, 0, 0, "-", "test_config"], [19, 0, 0, "-", "test_field"], [19, 0, 0, "-", "test_treenode"]], "tests.test_auv": [[19, 1, 1, "", "TestAUV"]], "tests.test_auv.TestAUV": [[19, 2, 1, "", "setUp"], [19, 2, 1, "", "test_load_auv_data"]], "tests.test_config": [[19, 1, 1, "", "TestConfig"]], "tests.test_config.TestConfig": [[19, 2, 1, "", "setUp"], [19, 2, 1, "", "test_starting_home_location"], [19, 2, 1, "", "test_wgs_starting_home_location"]], "tests.test_field": [[19, 1, 1, "", "TestField"]], "tests.test_field.TestField": [[19, 2, 1, "", "setUp"], [19, 2, 1, "", "test_border_contains"], [19, 2, 1, "", "test_border_in_the_way"], [19, 2, 1, "", "test_empty_grids"], [19, 2, 1, "", "test_get_ind_from_locations"], [19, 2, 1, "", "test_get_locations_from_ind"], [19, 2, 1, "", "test_get_neighbours"], [19, 2, 1, "", "test_illegal_grids"]], "tests.test_treenode": [[19, 1, 1, "", "TestPlanner"]], "tests.test_treenode.TestPlanner": [[19, 2, 1, "", "setUp"], [19, 2, 1, "", "test_cost"], [19, 2, 1, "", "test_parent"], [19, 2, 1, "", "test_set_location"]], "usr_func": [[20, 0, 0, "-", "EIBV"], [20, 0, 0, "-", "checkfolder"], [20, 0, 0, "-", "get_resume_state"], [20, 0, 0, "-", "interpolate_2d"], [20, 0, 0, "-", "interpolate_3d"], [20, 0, 0, "-", "is_even"], [20, 0, 0, "-", "is_list_empty"], [20, 0, 0, "-", "normalize"], [20, 0, 0, "-", "refill_nan_values"], [20, 0, 0, "-", "set_resume_state"], [20, 0, 0, "-", "sort_polygon_vertices"], [20, 0, 0, "-", "vectorize"]], "usr_func.EIBV": [[20, 4, 1, "", "EIBV_approximate"], [20, 4, 1, "", "EIBV_mvn"], [20, 4, 1, "", "calc_eibv"]], "usr_func.checkfolder": [[20, 4, 1, "", "checkfolder"]], "usr_func.get_resume_state": [[20, 4, 1, "", "get_resume_state"]], "usr_func.interpolate_2d": [[20, 4, 1, "", "interpolate_2d"]], "usr_func.interpolate_3d": [[20, 4, 1, "", "interpolate_3d"]], "usr_func.is_even": [[20, 4, 1, "", "is_even"]], "usr_func.is_list_empty": [[20, 4, 1, "", "is_list_empty"]], "usr_func.normalize": [[20, 4, 1, "", "normalize"]], "usr_func.refill_nan_values": [[20, 4, 1, "", "refill_nan_values"]], "usr_func.set_resume_state": [[20, 4, 1, "", "set_resume_state"]], "usr_func.sort_polygon_vertices": [[20, 4, 1, "", "sort_polygon_vertices"]], "usr_func.vectorize": [[20, 4, 1, "", "vectorize"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"agent": 0, "packag": [0, 2, 3, 5, 7, 8, 9, 10, 11, 18, 19, 20], "submodul": [0, 2, 3, 5, 7, 8, 9, 10, 11, 18, 19, 20], "agentmyop": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20], "agentmyopicvi": 0, "agentrrtstar": 0, "agentrrtstarvi": 0, "content": [0, 2, 3, 5, 7, 8, 9, 10, 11, 15, 18, 19, 20], "config": 1, "costvallei": 2, "budget": 2, "direct": 2, "experi": 3, "auv": 3, "eda": [3, 10], "field": 4, "grf": 5, "opa": 6, "planner": [7, 8, 9], "subpackag": 7, "astar": 7, "prm": 7, "straightlinepathplann": 7, "myopic2d": 8, "rrtscv": 9, "rrtstarcv": 9, "treenod": 9, "simul": 10, "ctd": 10, "log": 10, "logmyop": 10, "rrtlog": 10, "rrtsimul": 10, "simulator_eibv": 10, "simulator_myopic2d": 10, "simulator_rrtstar": 10, "visualis": 11, "agentplotmyop": 11, "agentplotrrtstar": 11, "agentplotrrtstarvi": 11, "treeplott": 11, "valleyplott": 11, "wg": 12, "waypointgraph": 13, "func_test": 14, "welcom": 15, "googl": 15, "": 15, "document": 15, "indic": 15, "tabl": 15, "src": 16, "run_repl": 17, "sensit": 18, "test_cost_effect": 18, "test_rrtstar_converg": 18, "test": 19, "test_agent_myop": 19, "test_agent_rrtstar": 19, "test_agent_rrtstarvi": 19, "test_auv": 19, "test_budget": 19, "test_config": 19, "test_cost_vallei": 19, "test_ctd_simul": 19, "test_eibv_method": 19, "test_experiment_eda": 19, "test_field": 19, "test_grf": 19, "test_log": 19, "test_myopic2d": 19, "test_plann": 19, "test_rrtstar": 19, "test_run_repl": 19, "test_simulator_eibv": 19, "test_simulator_myopic2d": 19, "test_simulator_rrtstar": 19, "test_treenod": 19, "usr_func": 20, "eibv": 20, "checkfold": 20, "get_resume_st": 20, "interpolate_2d": 20, "interpolate_3d": 20, "is_even": 20, "is_list_empti": 20, "normal": 20, "refill_nan_valu": 20, "set_resume_st": 20, "sort_polygon_vertic": 20, "vector": 20}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Agents package": [[0, "agents-package"]], "Submodules": [[0, "submodules"], [2, "submodules"], [3, "submodules"], [5, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [18, "submodules"], [19, "submodules"], [20, "submodules"]], "Agents.AgentMyopic module": [[0, "agents-agentmyopic-module"]], "Agents.AgentMyopicVis module": [[0, "agents-agentmyopicvis-module"]], "Agents.AgentRRTStar module": [[0, "agents-agentrrtstar-module"]], "Agents.AgentRRTStarVis module": [[0, "agents-agentrrtstarvis-module"]], "Module contents": [[0, "module-Agents"], [2, "module-CostValley"], [3, "module-Experiment"], [5, "module-GRF"], [7, "module-Planner"], [8, "module-Planner.Myopic2D"], [9, "module-Planner.RRTSCV"], [10, "module-Simulators"], [11, "module-Visualiser"], [18, "module-sensitivity"], [19, "module-tests"], [20, "module-usr_func"]], "Config module": [[1, "module-Config"]], "CostValley package": [[2, "costvalley-package"]], "CostValley.Budget module": [[2, "costvalley-budget-module"]], "CostValley.CostValley module": [[2, "costvalley-costvalley-module"]], "CostValley.Direction module": [[2, "module-CostValley.Direction"]], "Experiment package": [[3, "experiment-package"]], "Experiment.AUV module": [[3, "module-Experiment.AUV"]], "Experiment.EDA module": [[3, "experiment-eda-module"]], "Field module": [[4, "module-Field"]], "GRF package": [[5, "grf-package"]], "GRF.GRF module": [[5, "grf-grf-module"]], "OPA module": [[6, "opa-module"]], "Planner package": [[7, "planner-package"]], "Subpackages": [[7, "subpackages"]], "Planner.AStar module": [[7, "module-Planner.AStar"]], "Planner.PRM module": [[7, "module-Planner.PRM"]], "Planner.Planner module": [[7, "planner-planner-module"]], "Planner.StraightLinePathPlanner module": [[7, "module-Planner.StraightLinePathPlanner"]], "Planner.Myopic2D package": [[8, "planner-myopic2d-package"]], "Planner.Myopic2D.Myopic2D module": [[8, "planner-myopic2d-myopic2d-module"]], "Planner.RRTSCV package": [[9, "planner-rrtscv-package"]], "Planner.RRTSCV.RRTStarCV module": [[9, "planner-rrtscv-rrtstarcv-module"]], "Planner.RRTSCV.TreeNode module": [[9, "module-Planner.RRTSCV.TreeNode"]], "Simulators package": [[10, "simulators-package"]], "Simulators.CTD module": [[10, "simulators-ctd-module"]], "Simulators.EDA module": [[10, "simulators-eda-module"]], "Simulators.Log module": [[10, "simulators-log-module"]], "Simulators.LogMyopic module": [[10, "simulators-logmyopic-module"]], "Simulators.RRTLog module": [[10, "module-Simulators.RRTLog"]], "Simulators.RRTSimulator module": [[10, "simulators-rrtsimulator-module"]], "Simulators.Simulator module": [[10, "simulators-simulator-module"]], "Simulators.Simulator_EIBV module": [[10, "simulators-simulator-eibv-module"]], "Simulators.Simulator_Myopic2D module": [[10, "simulators-simulator-myopic2d-module"]], "Simulators.Simulator_RRTStar module": [[10, "simulators-simulator-rrtstar-module"]], "Visualiser package": [[11, "visualiser-package"]], "Visualiser.AgentPlotMyopic module": [[11, "visualiser-agentplotmyopic-module"]], "Visualiser.AgentPlotRRTStar module": [[11, "visualiser-agentplotrrtstar-module"]], "Visualiser.AgentPlotRRTStarVis module": [[11, "visualiser-agentplotrrtstarvis-module"]], "Visualiser.TreePlotter module": [[11, "visualiser-treeplotter-module"]], "Visualiser.ValleyPlotter module": [[11, "visualiser-valleyplotter-module"]], "Visualiser.Visualiser module": [[11, "visualiser-visualiser-module"]], "WGS module": [[12, "module-WGS"]], "WaypointGraph module": [[13, "module-WaypointGraph"]], "func_test module": [[14, "module-func_test"]], "Welcome to GOOGLE\u2019s documentation!": [[15, "welcome-to-google-s-documentation"]], "Contents:": [[15, null]], "Indices and tables": [[15, "indices-and-tables"]], "src": [[16, "src"]], "run_replicates module": [[17, "run-replicates-module"]], "sensitivity package": [[18, "sensitivity-package"]], "sensitivity.test_cost_effect module": [[18, "sensitivity-test-cost-effect-module"]], "sensitivity.test_rrtstar_convergence module": [[18, "sensitivity-test-rrtstar-convergence-module"]], "tests package": [[19, "tests-package"]], "tests.test_agent_myopic module": [[19, "tests-test-agent-myopic-module"]], "tests.test_agent_rrtstar module": [[19, "tests-test-agent-rrtstar-module"]], "tests.test_agent_rrtstarvis module": [[19, "tests-test-agent-rrtstarvis-module"]], "tests.test_auv module": [[19, "module-tests.test_auv"]], "tests.test_budget module": [[19, "tests-test-budget-module"]], "tests.test_config module": [[19, "module-tests.test_config"]], "tests.test_cost_valley module": [[19, "tests-test-cost-valley-module"]], "tests.test_ctd_simulator module": [[19, "tests-test-ctd-simulator-module"]], "tests.test_eibv_methods module": [[19, "tests-test-eibv-methods-module"]], "tests.test_experiment_eda module": [[19, "tests-test-experiment-eda-module"]], "tests.test_field module": [[19, "module-tests.test_field"]], "tests.test_grf module": [[19, "tests-test-grf-module"]], "tests.test_log module": [[19, "tests-test-log-module"]], "tests.test_myopic2d module": [[19, "tests-test-myopic2d-module"]], "tests.test_planner module": [[19, "tests-test-planner-module"]], "tests.test_rrtstar module": [[19, "tests-test-rrtstar-module"]], "tests.test_run_replicates module": [[19, "tests-test-run-replicates-module"]], "tests.test_simulator_eibv module": [[19, "tests-test-simulator-eibv-module"]], "tests.test_simulator_myopic2d module": [[19, "tests-test-simulator-myopic2d-module"]], "tests.test_simulator_rrtstar module": [[19, "tests-test-simulator-rrtstar-module"]], "tests.test_treenode module": [[19, "module-tests.test_treenode"]], "usr_func package": [[20, "usr-func-package"]], "usr_func.EIBV module": [[20, "module-usr_func.EIBV"]], "usr_func.checkfolder module": [[20, "module-usr_func.checkfolder"]], "usr_func.get_resume_state module": [[20, "module-usr_func.get_resume_state"]], "usr_func.interpolate_2d module": [[20, "module-usr_func.interpolate_2d"]], "usr_func.interpolate_3d module": [[20, "module-usr_func.interpolate_3d"]], "usr_func.is_even module": [[20, "module-usr_func.is_even"]], "usr_func.is_list_empty module": [[20, "module-usr_func.is_list_empty"]], "usr_func.normalize module": [[20, "module-usr_func.normalize"]], "usr_func.refill_nan_values module": [[20, "module-usr_func.refill_nan_values"]], "usr_func.set_resume_state module": [[20, "module-usr_func.set_resume_state"]], "usr_func.sort_polygon_vertices module": [[20, "module-usr_func.sort_polygon_vertices"]], "usr_func.vectorize module": [[20, "module-usr_func.vectorize"]]}, "indexentries": {"agents": [[0, "module-Agents"]], "module": [[0, "module-Agents"], [1, "module-Config"], [2, "module-CostValley"], [2, "module-CostValley.Direction"], [3, "module-Experiment"], [3, "module-Experiment.AUV"], [4, "module-Field"], [5, "module-GRF"], [7, "module-Planner"], [7, "module-Planner.AStar"], [7, "module-Planner.PRM"], [7, "module-Planner.StraightLinePathPlanner"], [8, "module-Planner.Myopic2D"], [9, "module-Planner.RRTSCV"], [9, "module-Planner.RRTSCV.TreeNode"], [10, "module-Simulators"], [10, "module-Simulators.RRTLog"], [11, "module-Visualiser"], [12, "module-WGS"], [13, "module-WaypointGraph"], [14, "module-func_test"], [18, "module-sensitivity"], [19, "module-tests"], [19, "module-tests.test_auv"], [19, "module-tests.test_config"], [19, "module-tests.test_field"], [19, "module-tests.test_treenode"], [20, "module-usr_func"], [20, "module-usr_func.EIBV"], [20, "module-usr_func.checkfolder"], [20, "module-usr_func.get_resume_state"], [20, "module-usr_func.interpolate_2d"], [20, "module-usr_func.interpolate_3d"], [20, "module-usr_func.is_even"], [20, "module-usr_func.is_list_empty"], [20, "module-usr_func.normalize"], [20, "module-usr_func.refill_nan_values"], [20, "module-usr_func.set_resume_state"], [20, "module-usr_func.sort_polygon_vertices"], [20, "module-usr_func.vectorize"]], "config": [[1, "module-Config"]], "config (class in config)": [[1, "Config.Config"]], "get_line_border_shapely() (config.config method)": [[1, "Config.Config.get_line_border_shapely"]], "get_line_obstacle_shapely() (config.config method)": [[1, "Config.Config.get_line_obstacle_shapely"]], "get_loc_end() (config.config method)": [[1, "Config.Config.get_loc_end"]], "get_loc_start() (config.config method)": [[1, "Config.Config.get_loc_start"]], "get_num_cores() (config.config method)": [[1, "Config.Config.get_num_cores"]], "get_num_replicates() (config.config method)": [[1, "Config.Config.get_num_replicates"]], "get_num_steps() (config.config method)": [[1, "Config.Config.get_num_steps"]], "get_polygon_border() (config.config method)": [[1, "Config.Config.get_polygon_border"]], "get_polygon_border_shapely() (config.config method)": [[1, "Config.Config.get_polygon_border_shapely"]], "get_polygon_obstacle() (config.config method)": [[1, "Config.Config.get_polygon_obstacle"]], "get_polygon_obstacle_shapely() (config.config method)": [[1, "Config.Config.get_polygon_obstacle_shapely"]], "get_wgs_loc_end() (config.config method)": [[1, "Config.Config.get_wgs_loc_end"]], "get_wgs_loc_start() (config.config method)": [[1, "Config.Config.get_wgs_loc_start"]], "get_wgs_polygon_border() (config.config method)": [[1, "Config.Config.get_wgs_polygon_border"]], "get_wgs_polygon_obstacle() (config.config method)": [[1, "Config.Config.get_wgs_polygon_obstacle"]], "set_loc_end() (config.config method)": [[1, "Config.Config.set_loc_end"]], "set_loc_start() (config.config method)": [[1, "Config.Config.set_loc_start"]], "set_num_cores() (config.config method)": [[1, "Config.Config.set_num_cores"]], "set_num_replicates() (config.config method)": [[1, "Config.Config.set_num_replicates"]], "set_num_steps() (config.config method)": [[1, "Config.Config.set_num_steps"]], "set_polygon_border() (config.config method)": [[1, "Config.Config.set_polygon_border"]], "set_polygon_obstacle() (config.config method)": [[1, "Config.Config.set_polygon_obstacle"]], "wgs2xy() (config.config static method)": [[1, "Config.Config.wgs2xy"]], "costvalley": [[2, "module-CostValley"]], "costvalley.direction": [[2, "module-CostValley.Direction"]], "direction (class in costvalley.direction)": [[2, "CostValley.Direction.Direction"]], "get_current_location() (costvalley.direction.direction method)": [[2, "CostValley.Direction.Direction.get_current_location"]], "get_direction_field() (costvalley.direction.direction method)": [[2, "CostValley.Direction.Direction.get_direction_field"]], "get_previous_location() (costvalley.direction.direction method)": [[2, "CostValley.Direction.Direction.get_previous_location"]], "set_current_location() (costvalley.direction.direction method)": [[2, "CostValley.Direction.Direction.set_current_location"]], "set_previous_location() (costvalley.direction.direction method)": [[2, "CostValley.Direction.Direction.set_previous_location"]], "auv (class in experiment.auv)": [[3, "Experiment.AUV.AUV"]], "experiment": [[3, "module-Experiment"]], "experiment.auv": [[3, "module-Experiment.AUV"]], "get_dataset() (experiment.auv.auv method)": [[3, "Experiment.AUV.AUV.get_dataset"]], "field": [[4, "module-Field"]], "field (class in field)": [[4, "Field.Field"]], "border_contains() (field.field method)": [[4, "Field.Field.border_contains"]], "get_border_limits() (field.field method)": [[4, "Field.Field.get_border_limits"]], "get_grid() (field.field method)": [[4, "Field.Field.get_grid"]], "get_ind_from_location() (field.field method)": [[4, "Field.Field.get_ind_from_location"]], "get_location_from_ind() (field.field method)": [[4, "Field.Field.get_location_from_ind"]], "get_neighbour_distance() (field.field method)": [[4, "Field.Field.get_neighbour_distance"]], "get_neighbour_indices() (field.field method)": [[4, "Field.Field.get_neighbour_indices"]], "is_border_in_the_way() (field.field method)": [[4, "Field.Field.is_border_in_the_way"]], "is_obstacle_in_the_way() (field.field method)": [[4, "Field.Field.is_obstacle_in_the_way"]], "obstacle_contains() (field.field method)": [[4, "Field.Field.obstacle_contains"]], "set_neighbour_distance() (field.field method)": [[4, "Field.Field.set_neighbour_distance"]], "grf": [[5, "module-GRF"]], "astar (class in planner.astar)": [[7, "Planner.AStar.AStar"]], "distance_tolerance (planner.astar.astar attribute)": [[7, "Planner.AStar.AStar.DISTANCE_TOLERANCE"]], "distance_tolerance_target (planner.astar.astar attribute)": [[7, "Planner.AStar.AStar.DISTANCE_TOLERANCE_TARGET"]], "node (class in planner.astar)": [[7, "Planner.AStar.Node"]], "node (class in planner.prm)": [[7, "Planner.PRM.Node"]], "prm (class in planner.prm)": [[7, "Planner.PRM.PRM"]], "planner": [[7, "module-Planner"]], "planner.astar": [[7, "module-Planner.AStar"]], "planner.prm": [[7, "module-Planner.PRM"]], "planner.straightlinepathplanner": [[7, "module-Planner.StraightLinePathPlanner"]], "straightlinepathplanner (class in planner.straightlinepathplanner)": [[7, "Planner.StraightLinePathPlanner.StraightLinePathPlanner"]], "testastar (class in planner.astar)": [[7, "Planner.AStar.TestAstar"]], "get_distance_between_nodes() (planner.astar.astar static method)": [[7, "Planner.AStar.AStar.get_distance_between_nodes"]], "get_distance_between_nodes() (planner.prm.prm static method)": [[7, "Planner.PRM.PRM.get_distance_between_nodes"]], "get_ind_min_cost() (planner.prm.prm static method)": [[7, "Planner.PRM.PRM.get_ind_min_cost"]], "get_min_cost_node() (planner.astar.astar method)": [[7, "Planner.AStar.AStar.get_min_cost_node"]], "get_new_location() (planner.prm.prm method)": [[7, "Planner.PRM.PRM.get_new_location"]], "get_road_map() (planner.prm.prm method)": [[7, "Planner.PRM.PRM.get_road_map"]], "get_shortest_path_using_dijkstra() (planner.prm.prm method)": [[7, "Planner.PRM.PRM.get_shortest_path_using_dijkstra"]], "get_waypoint_from_straight_line() (planner.straightlinepathplanner.straightlinepathplanner method)": [[7, "Planner.StraightLinePathPlanner.StraightLinePathPlanner.get_waypoint_from_straight_line"]], "inredzone() (planner.prm.prm method)": [[7, "Planner.PRM.PRM.inRedZone"]], "is_arrived() (planner.astar.astar method)": [[7, "Planner.AStar.AStar.is_arrived"]], "is_node_in_list() (planner.astar.astar method)": [[7, "Planner.AStar.AStar.is_node_in_list"]], "is_within_border() (planner.astar.astar method)": [[7, "Planner.AStar.AStar.is_within_border"]], "is_within_obstacle() (planner.astar.astar method)": [[7, "Planner.AStar.AStar.is_within_obstacle"]], "iscollided() (planner.prm.prm method)": [[7, "Planner.PRM.PRM.iscollided"]], "nodes (planner.prm.prm attribute)": [[7, "Planner.PRM.PRM.nodes"]], "plot_prm() (planner.prm.prm method)": [[7, "Planner.PRM.PRM.plot_prm"]], "polygon_obstacles (planner.prm.prm attribute)": [[7, "Planner.PRM.PRM.polygon_obstacles"]], "search_path() (planner.astar.astar method)": [[7, "Planner.AStar.AStar.search_path"]], "setup() (planner.astar.testastar method)": [[7, "Planner.AStar.TestAstar.setUp"]], "test_astar() (planner.astar.testastar method)": [[7, "Planner.AStar.TestAstar.test_astar"]], "planner.myopic2d": [[8, "module-Planner.Myopic2D"]], "planner.rrtscv": [[9, "module-Planner.RRTSCV"]], "planner.rrtscv.treenode": [[9, "module-Planner.RRTSCV.TreeNode"]], "treenode (class in planner.rrtscv.treenode)": [[9, "Planner.RRTSCV.TreeNode.TreeNode"]], "get_cost() (planner.rrtscv.treenode.treenode method)": [[9, "Planner.RRTSCV.TreeNode.TreeNode.get_cost"]], "get_distance_between_nodes() (planner.rrtscv.treenode.treenode static method)": [[9, "Planner.RRTSCV.TreeNode.TreeNode.get_distance_between_nodes"]], "get_location() (planner.rrtscv.treenode.treenode method)": [[9, "Planner.RRTSCV.TreeNode.TreeNode.get_location"]], "get_parent() (planner.rrtscv.treenode.treenode method)": [[9, "Planner.RRTSCV.TreeNode.TreeNode.get_parent"]], "set_cost() (planner.rrtscv.treenode.treenode method)": [[9, "Planner.RRTSCV.TreeNode.TreeNode.set_cost"]], "set_location() (planner.rrtscv.treenode.treenode method)": [[9, "Planner.RRTSCV.TreeNode.TreeNode.set_location"]], "set_parent() (planner.rrtscv.treenode.treenode method)": [[9, "Planner.RRTSCV.TreeNode.TreeNode.set_parent"]], "log (class in simulators.rrtlog)": [[10, "Simulators.RRTLog.Log"]], "simulators": [[10, "module-Simulators"]], "simulators.rrtlog": [[10, "module-Simulators.RRTLog"]], "append_log() (simulators.rrtlog.log method)": [[10, "Simulators.RRTLog.Log.append_log"]], "visualiser": [[11, "module-Visualiser"]], "wgs": [[12, "module-WGS"]], "wgs (class in wgs)": [[12, "WGS.WGS"]], "get_circumference() (wgs.wgs static method)": [[12, "WGS.WGS.get_circumference"]], "get_origin() (wgs.wgs static method)": [[12, "WGS.WGS.get_origin"]], "latlon2xy() (wgs.wgs static method)": [[12, "WGS.WGS.latlon2xy"]], "set_origin() (wgs.wgs static method)": [[12, "WGS.WGS.set_origin"]], "xy2latlon() (wgs.wgs static method)": [[12, "WGS.WGS.xy2latlon"]], "waypointgraph": [[13, "module-WaypointGraph"]], "waypointgraph (class in waypointgraph)": [[13, "WaypointGraph.WaypointGraph"]], "construct_hash_neighbours() (waypointgraph.waypointgraph method)": [[13, "WaypointGraph.WaypointGraph.construct_hash_neighbours"]], "construct_waypoints() (waypointgraph.waypointgraph method)": [[13, "WaypointGraph.WaypointGraph.construct_waypoints"]], "get_hash_neighbour() (waypointgraph.waypointgraph method)": [[13, "WaypointGraph.WaypointGraph.get_hash_neighbour"]], "get_ind_from_waypoint() (waypointgraph.waypointgraph method)": [[13, "WaypointGraph.WaypointGraph.get_ind_from_waypoint"]], "get_ind_neighbours() (waypointgraph.waypointgraph method)": [[13, "WaypointGraph.WaypointGraph.get_ind_neighbours"]], "get_neighbour_distance() (waypointgraph.waypointgraph method)": [[13, "WaypointGraph.WaypointGraph.get_neighbour_distance"]], "get_polygon_border() (waypointgraph.waypointgraph method)": [[13, "WaypointGraph.WaypointGraph.get_polygon_border"]], "get_polygon_obstacles() (waypointgraph.waypointgraph method)": [[13, "WaypointGraph.WaypointGraph.get_polygon_obstacles"]], "get_vector_between_two_waypoints() (waypointgraph.waypointgraph static method)": [[13, "WaypointGraph.WaypointGraph.get_vector_between_two_waypoints"]], "get_waypoint_from_ind() (waypointgraph.waypointgraph method)": [[13, "WaypointGraph.WaypointGraph.get_waypoint_from_ind"]], "get_waypoints() (waypointgraph.waypointgraph method)": [[13, "WaypointGraph.WaypointGraph.get_waypoints"]], "set_depth_layers() (waypointgraph.waypointgraph method)": [[13, "WaypointGraph.WaypointGraph.set_depth_layers"]], "set_neighbour_distance() (waypointgraph.waypointgraph method)": [[13, "WaypointGraph.WaypointGraph.set_neighbour_distance"]], "set_polygon_border() (waypointgraph.waypointgraph method)": [[13, "WaypointGraph.WaypointGraph.set_polygon_border"]], "set_polygon_obstacles() (waypointgraph.waypointgraph method)": [[13, "WaypointGraph.WaypointGraph.set_polygon_obstacles"]], "func_test": [[14, "module-func_test"]], "plotf_vector() (in module func_test)": [[14, "func_test.plotf_vector"]], "sensitivity": [[18, "module-sensitivity"]], "testauv (class in tests.test_auv)": [[19, "tests.test_auv.TestAUV"]], "testconfig (class in tests.test_config)": [[19, "tests.test_config.TestConfig"]], "testfield (class in tests.test_field)": [[19, "tests.test_field.TestField"]], "testplanner (class in tests.test_treenode)": [[19, "tests.test_treenode.TestPlanner"]], "setup() (tests.test_auv.testauv method)": [[19, "tests.test_auv.TestAUV.setUp"]], "setup() (tests.test_config.testconfig method)": [[19, "tests.test_config.TestConfig.setUp"]], "setup() (tests.test_field.testfield method)": [[19, "tests.test_field.TestField.setUp"]], "setup() (tests.test_treenode.testplanner method)": [[19, "tests.test_treenode.TestPlanner.setUp"]], "test_border_contains() (tests.test_field.testfield method)": [[19, "tests.test_field.TestField.test_border_contains"]], "test_border_in_the_way() (tests.test_field.testfield method)": [[19, "tests.test_field.TestField.test_border_in_the_way"]], "test_cost() (tests.test_treenode.testplanner method)": [[19, "tests.test_treenode.TestPlanner.test_cost"]], "test_empty_grids() (tests.test_field.testfield method)": [[19, "tests.test_field.TestField.test_empty_grids"]], "test_get_ind_from_locations() (tests.test_field.testfield method)": [[19, "tests.test_field.TestField.test_get_ind_from_locations"]], "test_get_locations_from_ind() (tests.test_field.testfield method)": [[19, "tests.test_field.TestField.test_get_locations_from_ind"]], "test_get_neighbours() (tests.test_field.testfield method)": [[19, "tests.test_field.TestField.test_get_neighbours"]], "test_illegal_grids() (tests.test_field.testfield method)": [[19, "tests.test_field.TestField.test_illegal_grids"]], "test_load_auv_data() (tests.test_auv.testauv method)": [[19, "tests.test_auv.TestAUV.test_load_auv_data"]], "test_parent() (tests.test_treenode.testplanner method)": [[19, "tests.test_treenode.TestPlanner.test_parent"]], "test_set_location() (tests.test_treenode.testplanner method)": [[19, "tests.test_treenode.TestPlanner.test_set_location"]], "test_starting_home_location() (tests.test_config.testconfig method)": [[19, "tests.test_config.TestConfig.test_starting_home_location"]], "test_wgs_starting_home_location() (tests.test_config.testconfig method)": [[19, "tests.test_config.TestConfig.test_wgs_starting_home_location"]], "tests": [[19, "module-tests"]], "tests.test_auv": [[19, "module-tests.test_auv"]], "tests.test_config": [[19, "module-tests.test_config"]], "tests.test_field": [[19, "module-tests.test_field"]], "tests.test_treenode": [[19, "module-tests.test_treenode"]], "eibv_approximate() (in module usr_func.eibv)": [[20, "usr_func.EIBV.EIBV_approximate"]], "eibv_mvn() (in module usr_func.eibv)": [[20, "usr_func.EIBV.EIBV_mvn"]], "calc_eibv() (in module usr_func.eibv)": [[20, "usr_func.EIBV.calc_eibv"]], "checkfolder() (in module usr_func.checkfolder)": [[20, "usr_func.checkfolder.checkfolder"]], "get_resume_state() (in module usr_func.get_resume_state)": [[20, "usr_func.get_resume_state.get_resume_state"]], "interpolate_2d() (in module usr_func.interpolate_2d)": [[20, "usr_func.interpolate_2d.interpolate_2d"]], "interpolate_3d() (in module usr_func.interpolate_3d)": [[20, "usr_func.interpolate_3d.interpolate_3d"]], "is_even() (in module usr_func.is_even)": [[20, "usr_func.is_even.is_even"]], "is_list_empty() (in module usr_func.is_list_empty)": [[20, "usr_func.is_list_empty.is_list_empty"]], "normalize() (in module usr_func.normalize)": [[20, "usr_func.normalize.normalize"]], "refill_nan_values() (in module usr_func.refill_nan_values)": [[20, "usr_func.refill_nan_values.refill_nan_values"]], "set_resume_state() (in module usr_func.set_resume_state)": [[20, "usr_func.set_resume_state.set_resume_state"]], "sort_polygon_vertices() (in module usr_func.sort_polygon_vertices)": [[20, "usr_func.sort_polygon_vertices.sort_polygon_vertices"]], "usr_func": [[20, "module-usr_func"]], "usr_func.eibv": [[20, "module-usr_func.EIBV"]], "usr_func.checkfolder": [[20, "module-usr_func.checkfolder"]], "usr_func.get_resume_state": [[20, "module-usr_func.get_resume_state"]], "usr_func.interpolate_2d": [[20, "module-usr_func.interpolate_2d"]], "usr_func.interpolate_3d": [[20, "module-usr_func.interpolate_3d"]], "usr_func.is_even": [[20, "module-usr_func.is_even"]], "usr_func.is_list_empty": [[20, "module-usr_func.is_list_empty"]], "usr_func.normalize": [[20, "module-usr_func.normalize"]], "usr_func.refill_nan_values": [[20, "module-usr_func.refill_nan_values"]], "usr_func.set_resume_state": [[20, "module-usr_func.set_resume_state"]], "usr_func.sort_polygon_vertices": [[20, "module-usr_func.sort_polygon_vertices"]], "usr_func.vectorize": [[20, "module-usr_func.vectorize"]], "vectorize() (in module usr_func.vectorize)": [[20, "usr_func.vectorize.vectorize"]]}})